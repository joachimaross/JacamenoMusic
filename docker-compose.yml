version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: jacameno-postgres
    environment:
      POSTGRES_USER: jacameno
      POSTGRES_PASSWORD: jacameno_dev
      POSTGRES_DB: jacameno
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - jacameno-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: jacameno-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - jacameno-network

  # MinIO (S3-compatible storage for local development)
  minio:
    image: minio/minio:latest
    container_name: jacameno-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - jacameno-network

  # Backend API (Optional - can run locally)
  # api:
  #   build:
  #     context: ./services/api
  #     dockerfile: Dockerfile
  #   container_name: jacameno-api
  #   environment:
  #     - NODE_ENV=development
  #     - PORT=4000
  #     - DATABASE_URL=postgresql://jacameno:jacameno_dev@postgres:5432/jacameno
  #     - REDIS_URL=redis://redis:6379
  #   ports:
  #     - "4000:4000"
  #   volumes:
  #     - ./services/api:/app
  #     - /app/node_modules
  #   depends_on:
  #     - postgres
  #     - redis
  #   networks:
  #     - jacameno-network

  # AI Microservices (Optional - can run locally)
  # ai-services:
  #   build:
  #     context: ./services/ai-microservices
  #     dockerfile: Dockerfile
  #   container_name: jacameno-ai
  #   environment:
  #     - PYTHONUNBUFFERED=1
  #   ports:
  #     - "8000:8000"
  #   volumes:
  #     - ./services/ai-microservices:/app
  #   networks:
  #     - jacameno-network

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  jacameno-network:
    driver: bridge
